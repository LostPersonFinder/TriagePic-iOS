/*
	PLsearchRequestType.h
	The implementation of properties and methods for the PLsearchRequestType object.
	Generated by SudzC.com
*/
#import "PLsearchRequestType.h"

@implementation PLsearchRequestType
	@synthesize token = _token;
	@synthesize eventShortname = _eventShortname;
	@synthesize query = _query;
	@synthesize photo = _photo;
	@synthesize filters = _filters;
	@synthesize pageStart = _pageStart;
	@synthesize perPage = _perPage;
	@synthesize sortBy = _sortBy;
	@synthesize countOnly = _countOnly;

	- (id) init
	{
		if(self = [super init])
		{
			self.token = nil;
			self.eventShortname = nil;
			self.query = nil;
			self.photo = nil;
			self.filters = nil;
			self.sortBy = nil;

		}
		return self;
	}

	+ (PLsearchRequestType*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[self alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.token = [Soap getNodeValue: node withName: @"token"];
			self.eventShortname = [Soap getNodeValue: node withName: @"eventShortname"];
			self.query = [Soap getNodeValue: node withName: @"query"];
			self.photo = [Soap getNodeValue: node withName: @"photo"];
			self.filters = [Soap getNodeValue: node withName: @"filters"];
			self.pageStart = [[Soap getNodeValue: node withName: @"pageStart"] intValue];
			self.perPage = [[Soap getNodeValue: node withName: @"perPage"] intValue];
			self.sortBy = [Soap getNodeValue: node withName: @"sortBy"];
			self.countOnly = [[Soap getNodeValue: node withName: @"countOnly"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"searchRequestType"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		/*if (self.token != nil)*/ [s appendFormat: @"<token>%@</token>", [CommonFunctions escapeForXML:self.token]];
		/*if (self.eventShortname != nil)*/ [s appendFormat: @"<eventShortname>%@</eventShortname>", [CommonFunctions escapeForXML:self.eventShortname]];
		/*if (self.query != nil)*/ [s appendFormat: @"<query>%@</query>", [CommonFunctions escapeForXML:self.query]];
		/*if (self.photo != nil)*/ [s appendFormat: @"<photo>%@</photo>", [CommonFunctions escapeForXML:self.photo]];
		/*if (self.filters != nil)*/ [s appendFormat: @"<filters>%@</filters>", [CommonFunctions escapeForXML:self.filters]];
		[s appendFormat: @"<pageStart>%@</pageStart>", [NSString stringWithFormat: @"%i", self.pageStart]];
		[s appendFormat: @"<perPage>%@</perPage>", [NSString stringWithFormat: @"%i", self.perPage]];
		/*if (self.sortBy != nil)*/ [s appendFormat: @"<sortBy>%@</sortBy>", [CommonFunctions escapeForXML:self.sortBy]];
		[s appendFormat: @"<countOnly>%@</countOnly>", (self.countOnly)?@YES:@NO];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	- (BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[PLsearchRequestType class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	- (NSUInteger)hash{
		return [Soap generateHash:self];

	}

- (PLsearchRequestType *)copy
{
    PLsearchRequestType *aCopy = [[PLsearchRequestType alloc] init];
    [aCopy setToken:_token];
    [aCopy setEventShortname:_eventShortname];
    [aCopy setQuery:_query];
    [aCopy setPhoto:_photo];
    [aCopy setFilters:_filters];
    [aCopy setPageStart:_pageStart];
    [aCopy setPerPage:_perPage];
    [aCopy setSortBy:_sortBy];
    [aCopy setCountOnly:_countOnly];
    
    return aCopy;
}
@end
